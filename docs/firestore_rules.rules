rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Match any document in the 'computers' collection
    match /computers/{computerId} {
      // Allow read, update, delete only if the user is authenticated and the document's userId matches the user's uid
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;

      // Allow create only if the user is authenticated and the incoming document's userId matches the user's uid
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

       // Optional: Add validation for data structure on write (create/update)
       // function isValidComputerData() {
       //   return request.resource.data.assetTag is string && request.resource.data.assetTag.size() > 0
       //       && request.resource.data.computerName is string && request.resource.data.computerName.size() > 0
       //       && request.resource.data.processor is string && request.resource.data.processor.size() > 0
       //       && request.resource.data.ramSize is number && request.resource.data.ramSize >= 1
       //       && request.resource.data.storageType is string && (request.resource.data.storageType == 'SSD' || request.resource.data.storageType == 'HDD')
       //       && request.resource.data.storageSize is number && request.resource.data.storageSize >= 1
       //       && request.resource.data.uefiSupport is bool
       //       && request.resource.data.secureBootEnabled is bool
       //       && request.resource.data.isCompatible is bool
       //       && request.resource.data.verifiedByTool is bool
       //       && (!('tpmVersion' in request.resource.data) || request.resource.data.tpmVersion is string) // Optional fields
       //       && (!('observations' in request.resource.data) || request.resource.data.observations is string)
       //       // Ensure timestamps are server timestamps on create/update
       //       && (request.method == 'create' ? request.resource.data.createdAt == request.time && request.resource.data.updatedAt == request.time : request.resource.data.updatedAt == request.time)
       //       && request.resource.data.userId == request.auth.uid; // Ensure userId matches on write
       // }
       // allow write: if request.auth != null && isValidComputerData();

    }

    // Deny all other reads/writes by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
